{"ast":null,"code":"\"use strict\";\n\n// import { Component } from '@angular/core';\n// import { Filme } from './filme.model';\n// @Component({\n//   selector: 'app-root',\n//   templateUrl: './app.component.html',\n//   styleUrls: ['./app.component.css']\n// })\n// export class AppComponent {\n//   filmes: Filme[] = [];\n//   novoFilme: Filme = {\n//     nome: '',\n//     sinopse: '',\n//     assistido: false\n//   };\n//   adicionarFilme() {\n//     this.filmes.push(this.novoFilme);\n//     this.novoFilme = {\n//       nome: '',\n//       sinopse: '',\n//       assistido: false\n//     };\n//     this.ordenarFilmes();\n//   }\n//   removerFilme(filme: Filme) {\n//     const index = this.filmes.indexOf(filme);\n//     if (index > -1) {\n//       this.filmes.splice(index, 1);\n//     }\n//   }\n//   avaliarFilme(filme: Filme, avaliacao: boolean) {\n//     filme.avaliacao = avaliacao;\n//     this.ordenarFilmes();\n//   }\n//   adicionarComentario(filme: Filme, comentario: string) {\n//     filme.comentario = comentario;\n//   }\n//   ordenarFilmes() {\n//     this.filmes.sort((a, b) => {\n//       if (a.assistido && !b.assistido) {\n//         return 1;\n//       } else if (!a.assistido && b.assistido) {\n//         return -1;\n//       } else {\n//         return 0;\n//       }\n//     });\n//     const filmesAssistidos = this.filmes.filter(filme => filme.assistido);\n//     const filmesNaoAssistidos = this.filmes.filter(filme => !filme.assistido);\n//     this.filmes = [...filmesNaoAssistidos, ...filmesAssistidos];\n//   }\n// }","map":{"version":3,"names":[],"sources":["/home/gabriela/AngularAdaV1/ProjetoAngularAda/src/app/app.component.ts"],"sourcesContent":["// import { Component } from '@angular/core';\n// import { Filme } from './filme.model';\n\n// @Component({\n//   selector: 'app-root',\n//   templateUrl: './app.component.html',\n//   styleUrls: ['./app.component.css']\n// })\n// export class AppComponent {\n//   filmes: Filme[] = [];\n//   novoFilme: Filme = {\n//     nome: '',\n//     sinopse: '',\n//     assistido: false\n//   };\n\n//   adicionarFilme() {\n//     this.filmes.push(this.novoFilme);\n//     this.novoFilme = {\n//       nome: '',\n//       sinopse: '',\n//       assistido: false\n//     };\n//     this.ordenarFilmes();\n//   }\n\n//   removerFilme(filme: Filme) {\n//     const index = this.filmes.indexOf(filme);\n//     if (index > -1) {\n//       this.filmes.splice(index, 1);\n//     }\n//   }\n\n//   avaliarFilme(filme: Filme, avaliacao: boolean) {\n//     filme.avaliacao = avaliacao;\n//     this.ordenarFilmes();\n//   }\n\n//   adicionarComentario(filme: Filme, comentario: string) {\n//     filme.comentario = comentario;\n//   }\n\n//   ordenarFilmes() {\n//     this.filmes.sort((a, b) => {\n//       if (a.assistido && !b.assistido) {\n//         return 1;\n//       } else if (!a.assistido && b.assistido) {\n//         return -1;\n//       } else {\n//         return 0;\n//       }\n//     });\n  \n//     const filmesAssistidos = this.filmes.filter(filme => filme.assistido);\n//     const filmesNaoAssistidos = this.filmes.filter(filme => !filme.assistido);\n//     this.filmes = [...filmesNaoAssistidos, ...filmesAssistidos];\n//   }\n  \n// }\n\n"],"mappings":";;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"script","externalDependencies":[]}